"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[182],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),o=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),s=o(n),u=r,N=s["".concat(p,".").concat(u)]||s[u]||k[u]||i;return n?a.createElement(N,l(l({ref:t},m),{},{components:n})):a.createElement(N,l({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=s;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var o=2;o<i;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},4563:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return u},frontMatter:function(){return d},metadata:function(){return o},toc:function(){return k}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],d={id:"RootParser",title:"Class: RootParser",sidebar_label:"RootParser",sidebar_position:0,custom_edit_url:null},p=void 0,o={unversionedId:"develop/api/classes/RootParser",id:"develop/api/classes/RootParser",title:"Class: RootParser",description:"Hierarchy",source:"@site/docs/develop/api/classes/RootParser.md",sourceDirName:"develop/api/classes",slug:"/develop/api/classes/RootParser",permalink:"/Bluehawk/develop/api/classes/RootParser",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"RootParser",title:"Class: RootParser",sidebar_label:"RootParser",sidebar_position:0,custom_edit_url:null},sidebar:"mainSidebar",previous:{title:"Document",permalink:"/Bluehawk/develop/api/classes/Document"},next:{title:"ActionArgs",permalink:"/Bluehawk/develop/api/interfaces/ActionArgs"}},m={},k=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"RECORDING_PHASE",id:"recording_phase",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"_bluehawkErrors",id:"_bluehawkerrors",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"annotatedText",id:"annotatedtext",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"attributeList",id:"attributelist",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"blockComment",id:"blockcomment",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"blockTag",id:"blocktag",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"blockTagUncommentedContents",id:"blocktaguncommentedcontents",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"chunk",id:"chunk",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"errors",id:"errors",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"input",id:"input",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"languageSpecification",id:"languagespecification",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"lexer",id:"lexer",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"lineComment",id:"linecomment",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"pushParser",id:"pushparser",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"tag",id:"tag",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"tagAttribute",id:"tagattribute",level:3},{value:"Defined in",id:"defined-in-16",level:4},{value:"Methods",id:"methods",level:2},{value:"ACTION",id:"action",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"AT_LEAST_ONE",id:"at_least_one",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"AT_LEAST_ONE_SEP",id:"at_least_one_sep",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"BACKTRACK",id:"backtrack",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Returns",id:"returns-4",level:5},{value:"Inherited from",id:"inherited-from-6",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"CONSUME",id:"consume",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Inherited from",id:"inherited-from-7",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"LA",id:"la",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Inherited from",id:"inherited-from-8",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"MANY",id:"many",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Inherited from",id:"inherited-from-9",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"MANY_SEP",id:"many_sep",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Inherited from",id:"inherited-from-10",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"OPTION",id:"option",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Inherited from",id:"inherited-from-11",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"OR",id:"or",level:3},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Inherited from",id:"inherited-from-12",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Inherited from",id:"inherited-from-13",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"OR1",id:"or1",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Inherited from",id:"inherited-from-14",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"OR2",id:"or2",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Inherited from",id:"inherited-from-15",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"OR3",id:"or3",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Inherited from",id:"inherited-from-16",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"OR4",id:"or4",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Inherited from",id:"inherited-from-17",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"OR5",id:"or5",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Inherited from",id:"inherited-from-18",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"OR6",id:"or6",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Inherited from",id:"inherited-from-19",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"OR7",id:"or7",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Inherited from",id:"inherited-from-20",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"OR8",id:"or8",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Inherited from",id:"inherited-from-21",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"OR9",id:"or9",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Inherited from",id:"inherited-from-22",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"OVERRIDE_RULE",id:"override_rule",level:3},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Inherited from",id:"inherited-from-23",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"RULE",id:"rule",level:3},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Inherited from",id:"inherited-from-24",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"SKIP_TOKEN",id:"skip_token",level:3},{value:"Returns",id:"returns-23",level:4},{value:"Inherited from",id:"inherited-from-25",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"SUBRULE",id:"subrule",level:3},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Inherited from",id:"inherited-from-26",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"atLeastOne",id:"atleastone",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Inherited from",id:"inherited-from-27",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"canTokenTypeBeDeletedInRecovery",id:"cantokentypebedeletedinrecovery",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Inherited from",id:"inherited-from-28",level:4},{value:"Defined in",id:"defined-in-42",level:4},{value:"canTokenTypeBeInsertedInRecovery",id:"cantokentypebeinsertedinrecovery",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Inherited from",id:"inherited-from-29",level:4},{value:"Defined in",id:"defined-in-43",level:4},{value:"computeContentAssist",id:"computecontentassist",level:3},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Inherited from",id:"inherited-from-30",level:4},{value:"Defined in",id:"defined-in-44",level:4},{value:"consume",id:"consume-1",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Inherited from",id:"inherited-from-31",level:4},{value:"Defined in",id:"defined-in-45",level:4},{value:"getBaseCstVisitorConstructor",id:"getbasecstvisitorconstructor",level:3},{value:"Type parameters",id:"type-parameters-7",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Parameters",id:"parameters-29",level:5},{value:"Inherited from",id:"inherited-from-32",level:4},{value:"Defined in",id:"defined-in-46",level:4},{value:"getBaseCstVisitorConstructorWithDefaults",id:"getbasecstvisitorconstructorwithdefaults",level:3},{value:"Type parameters",id:"type-parameters-8",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Parameters",id:"parameters-30",level:5},{value:"Inherited from",id:"inherited-from-33",level:4},{value:"Defined in",id:"defined-in-47",level:4},{value:"getGAstProductions",id:"getgastproductions",level:3},{value:"Returns",id:"returns-32",level:4},{value:"Inherited from",id:"inherited-from-34",level:4},{value:"Defined in",id:"defined-in-48",level:4},{value:"getNextPossibleTokenTypes",id:"getnextpossibletokentypes",level:3},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Inherited from",id:"inherited-from-35",level:4},{value:"Defined in",id:"defined-in-49",level:4},{value:"getSerializedGastProductions",id:"getserializedgastproductions",level:3},{value:"Returns",id:"returns-34",level:4},{value:"Inherited from",id:"inherited-from-36",level:4},{value:"Defined in",id:"defined-in-50",level:4},{value:"getTokenToInsert",id:"gettokentoinsert",level:3},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Inherited from",id:"inherited-from-37",level:4},{value:"Defined in",id:"defined-in-51",level:4},{value:"many",id:"many-1",level:3},{value:"Parameters",id:"parameters-33",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Inherited from",id:"inherited-from-38",level:4},{value:"Defined in",id:"defined-in-52",level:4},{value:"option",id:"option-1",level:3},{value:"Type parameters",id:"type-parameters-9",level:4},{value:"Parameters",id:"parameters-34",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Inherited from",id:"inherited-from-39",level:4},{value:"Defined in",id:"defined-in-53",level:4},{value:"or",id:"or-1",level:3},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-38",level:4},{value:"Inherited from",id:"inherited-from-40",level:4},{value:"Defined in",id:"defined-in-54",level:4},{value:"Type parameters",id:"type-parameters-10",level:4},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-39",level:4},{value:"Inherited from",id:"inherited-from-41",level:4},{value:"Defined in",id:"defined-in-55",level:4},{value:"parse",id:"parse",level:3},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-40",level:4},{value:"Defined in",id:"defined-in-56",level:4},{value:"performSelfAnalysis",id:"performselfanalysis",level:3},{value:"Returns",id:"returns-41",level:4},{value:"Inherited from",id:"inherited-from-42",level:4},{value:"Defined in",id:"defined-in-57",level:4},{value:"reset",id:"reset",level:3},{value:"Returns",id:"returns-42",level:4},{value:"Inherited from",id:"inherited-from-43",level:4},{value:"Defined in",id:"defined-in-58",level:4},{value:"subrule",id:"subrule-1",level:3},{value:"Type parameters",id:"type-parameters-11",level:4},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-43",level:4},{value:"Inherited from",id:"inherited-from-44",level:4},{value:"Defined in",id:"defined-in-59",level:4}],s={toc:k};function u(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"CstParser")),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"RootParser"))))),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new RootParser"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"languageTokens"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"languageSpecification?"),")"),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"languageTokens")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TokenType"),"[]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"languageSpecification?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LanguageSpecification"},(0,i.kt)("inlineCode",{parentName:"a"},"LanguageSpecification")))))),(0,i.kt)("h4",{id:"overrides"},"Overrides"),(0,i.kt)("p",null,"CstParser.constructor"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L103"},"src/bluehawk/parser/RootParser.ts:103")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"recording_phase"},"RECORDING","_","PHASE"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"RECORDING","_","PHASE"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Flag indicating the Parser is at the recording phase.\nCan be used to implement methods similar to {@link BaseParser.ACTION}\nOr any other logic to requires knowledge of the recording phase.\nSee:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://chevrotain.io/docs/guide/internals.html#grammar-recording"},"https://chevrotain.io/docs/guide/internals.html#grammar-recording"),"\nto learn more on the recording phase and how Chevrotain works.")),(0,i.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,i.kt)("p",null,"CstParser.RECORDING","_","PHASE"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:40"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"_bluehawkerrors"},"_","bluehawkErrors"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"_","bluehawkErrors"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"BluehawkError"),"[] = ",(0,i.kt)("inlineCode",{parentName:"p"},"[]")),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L325"},"src/bluehawk/parser/RootParser.ts:325")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"annotatedtext"},"annotatedText"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"annotatedText"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Rule")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"UndefinedRule")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L91"},"src/bluehawk/parser/RootParser.ts:91")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"attributelist"},"attributeList"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"attributeList"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Rule")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"UndefinedRule")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L99"},"src/bluehawk/parser/RootParser.ts:99")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"blockcomment"},"blockComment"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"blockComment"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Rule")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"UndefinedRule")),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L97"},"src/bluehawk/parser/RootParser.ts:97")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"blocktag"},"blockTag"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"blockTag"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Rule")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"UndefinedRule")),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L93"},"src/bluehawk/parser/RootParser.ts:93")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"blocktaguncommentedcontents"},"blockTagUncommentedContents"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"blockTagUncommentedContents"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Rule")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"UndefinedRule")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L94"},"src/bluehawk/parser/RootParser.ts:94")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"chunk"},"chunk"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"chunk"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Rule")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"UndefinedRule")),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L92"},"src/bluehawk/parser/RootParser.ts:92")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"errors"},"errors"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"errors"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"IRecognitionException"),"[]"),(0,i.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,i.kt)("p",null,"CstParser.errors"),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:30"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"input"},"input"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"input"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"IToken"),"[]"),(0,i.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,i.kt)("p",null,"CstParser.input"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:857"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"languagespecification"},"languageSpecification"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"languageSpecification"),": ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/LanguageSpecification"},(0,i.kt)("inlineCode",{parentName:"a"},"LanguageSpecification"))),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L101"},"src/bluehawk/parser/RootParser.ts:101")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"lexer"},"lexer"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"lexer"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Lexer")),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L89"},"src/bluehawk/parser/RootParser.ts:89")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"linecomment"},"lineComment"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"lineComment"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Rule")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"UndefinedRule")),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L98"},"src/bluehawk/parser/RootParser.ts:98")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"pushparser"},"pushParser"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"pushParser"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Rule")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"UndefinedRule")),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L100"},"src/bluehawk/parser/RootParser.ts:100")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tag"},"tag"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"tag"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Rule")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"UndefinedRule")),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L95"},"src/bluehawk/parser/RootParser.ts:95")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tagattribute"},"tagAttribute"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"tagAttribute"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Rule")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"UndefinedRule")),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L96"},"src/bluehawk/parser/RootParser.ts:96")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"action"},"ACTION"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"ACTION"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"impl"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"T")),(0,i.kt)("p",null,"The Semantic Actions wrapper.\nShould be used to wrap semantic actions that either:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'May fail when executing in "recording phase".'),(0,i.kt)("li",{parentName:"ul"},'Have global side effects that should be avoided during "recording phase".')),(0,i.kt)("p",null,"For more information see:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://chevrotain.io/docs/guide/internals.html#grammar-recording"},"https://chevrotain.io/docs/guide/internals.html#grammar-recording"))),(0,i.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T"))))),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"impl")),(0,i.kt)("td",{parentName:"tr",align:"left"},"() => ",(0,i.kt)("inlineCode",{parentName:"td"},"T"))))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"T")),(0,i.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,i.kt)("p",null,"CstParser.ACTION"),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:89"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"at_least_one"},"AT","_","LEAST","_","ONE"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"AT_LEAST_ONE"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"actionORMethodDef"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Convenience method, same as MANY but the repetition is of one or more.\nfailing to match at least one repetition will result in a parsing error and\ncause a parsing error."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," MANY"),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"actionORMethodDef")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GrammarAction"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">"," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"DSLMethodOptsWithErr"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},'The grammar action to optionally invoke multiple times                             or an "OPTIONS" object describing the grammar action and optional properties.')))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,i.kt)("p",null,"CstParser.AT","_","LEAST","_","ONE"),(0,i.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:683"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"at_least_one_sep"},"AT","_","LEAST","_","ONE","_","SEP"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"AT_LEAST_ONE_SEP"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"options"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Convenience method, same as MANY_SEP but the repetition is of one or more.\nfailing to match at least one repetition will result in a parsing error and\ncause the parser to attempt error recovery."),(0,i.kt)("p",null,"Note that an additional optional property ERR_MSG can be used to provide custom error messages."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," MANY_SEP"),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"AtLeastOneSepMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"An object defining the grammar of each iteration and the separator between iterations")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,i.kt)("p",null,"CstParser.AT","_","LEAST","_","ONE","_","SEP"),(0,i.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:772"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"backtrack"},"BACKTRACK"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"BACKTRACK"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"grammarRule"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"args?"),"): () => ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T"))))),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"grammarRule")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(...",(0,i.kt)("inlineCode",{parentName:"td"},"args"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]) => ",(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The rule to try and parse in backtracking mode.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"args?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"argument to be passed to the grammar rule execution")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"a lookahead function that will try to parse the given grammarRule and will return true if succeed."),(0,i.kt)("p",null,"\u25b8 (): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h5",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"a lookahead function that will try to parse the given grammarRule and will return true if succeed."),(0,i.kt)("h4",{id:"inherited-from-6"},"Inherited from"),(0,i.kt)("p",null,"CstParser.BACKTRACK"),(0,i.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:75"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"consume"},"CONSUME"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"CONSUME"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"tokType"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"IToken")),(0,i.kt)("p",null,"A Parsing DSL method use to consume a single Token.\nIn EBNF terms this is equivalent to a Terminal."),(0,i.kt)("p",null,"A Token will be consumed, IFF the next token in the token vector matches ",(0,i.kt)("inlineCode",{parentName:"p"},"tokType"),".\notherwise the parser may attempt to perform error recovery (if enabled)."),(0,i.kt)("p",null,"The index in the method name indicates the unique occurrence of a terminal consumption\ninside a the top level rule. What this means is that if a terminal appears\nmore than once in a single rule, each appearance must have a ",(0,i.kt)("strong",{parentName:"p"},"different")," index."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  this.RULE(\"qualifiedName\", () => {\n  this.CONSUME1(Identifier);\n    this.MANY(() => {\n      this.CONSUME1(Dot);\n      // here we use CONSUME2 because the terminal\n      // 'Identifier' has already appeared previously in the\n      // the rule 'parseQualifiedName'\n      this.CONSUME2(Identifier);\n    });\n  })\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"See more details on the ",(0,i.kt)("a",{parentName:"li",href:"http://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES"},"unique suffixes requirement"),".")),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TokenType")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Type of the token to be consumed.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ConsumeMethodOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},"optional properties to modify the behavior of CONSUME.")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"IToken")),(0,i.kt)("h4",{id:"inherited-from-7"},"Inherited from"),(0,i.kt)("p",null,"CstParser.CONSUME"),(0,i.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:186"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"la"},"LA"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"LA"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"howMuch"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"IToken")),(0,i.kt)("p",null,"Look-Ahead for the Token Vector\nLA(1) is the next Token ahead.\nLA(n) is the nth Token ahead.\nLA(0) is the previously consumed Token."),(0,i.kt)("p",null,"Looking beyond the end of the Token Vector or before its begining\nwill return in an IToken of type EOF {@link EOF}.\nThis behavior can be used to avoid infinite loops."),(0,i.kt)("p",null,"This is often used to implement custom lookahead logic for GATES.\n",(0,i.kt)("a",{parentName:"p",href:"https://chevrotain.io/docs/features/gates.html"},"https://chevrotain.io/docs/features/gates.html")),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"howMuch")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"IToken")),(0,i.kt)("h4",{id:"inherited-from-8"},"Inherited from"),(0,i.kt)("p",null,"CstParser.LA"),(0,i.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:878"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"many"},"MANY"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"MANY"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"actionORMethodDef"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Parsing DSL method, that indicates a repetition of zero or more.\nThis is equivalent to EBNF repetition ","{","...","}","."),(0,i.kt)("p",null,"Note that there are two syntax forms:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Passing the grammar action directly:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"  this.MANY(() => {\n    this.CONSUME(Comma)\n    this.CONSUME(Digit)\n   })\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'using an "options" object:'),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"  this.MANY({\n    GATE: predicateFunc,\n    DEF: () => {\n           this.CONSUME(Comma)\n           this.CONSUME(Digit)\n         }\n  });\n")))),(0,i.kt)("p",null,"The optional 'GATE' property in \"options\" object form can be used to add constraints\nto invoking the grammar action."),(0,i.kt)("p",null,"As in CONSUME the index in the method name indicates the occurrence\nof the repetition production in it's top rule."),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"actionORMethodDef")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GrammarAction"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">"," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"DSLMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},'The grammar action to optionally invoke multiple times                             or an "OPTIONS" object describing the grammar action and optional properties.')))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"inherited-from-9"},"Inherited from"),(0,i.kt)("p",null,"CstParser.MANY"),(0,i.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:511"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"many_sep"},"MANY","_","SEP"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"MANY_SEP"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"options"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Parsing DSL method, that indicates a repetition of zero or more with a separator\nToken between the repetitions."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    this.MANY_SEP({\n        SEP:Comma,\n        DEF: () => {\n            this.CONSUME(Number};\n            // ...\n        })\n")),(0,i.kt)("p",null,"Note that because this DSL method always requires more than one argument the options object is always required\nand it is not possible to use a shorter form like in the MANY DSL method."),(0,i.kt)("p",null,'Note that for the purposes of deciding on whether or not another iteration exists\nOnly a single Token is examined (The separator). Therefore if the grammar being implemented is\nso "crazy" to require multiple tokens to identify an item separator please use the more basic DSL methods\nto implement it.'),(0,i.kt)("p",null,"As in CONSUME the index in the method name indicates the occurrence\nof the repetition production in it's top rule."),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ManySepMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"An object defining the grammar of each iteration and the separator between iterations")))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"inherited-from-10"},"Inherited from"),(0,i.kt)("p",null,"CstParser.MANY","_","SEP"),(0,i.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:616"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"option"},"OPTION"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"OPTION"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"OUT"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"actionORMethodDef"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"OUT")),(0,i.kt)("p",null,'Parsing DSL Method that Indicates an Optional production.\nin EBNF notation this is equivalent to: "',"[...]",'".'),(0,i.kt)("p",null,"Note that there are two syntax forms:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Passing the grammar action directly:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"  this.OPTION(() => {\n    this.CONSUME(Digit)}\n  );\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'using an "options" object:'),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"  this.OPTION({\n    GATE:predicateFunc,\n    DEF: () => {\n      this.CONSUME(Digit)\n  }});\n")))),(0,i.kt)("p",null,"The optional 'GATE' property in \"options\" object form can be used to add constraints\nto invoking the grammar action."),(0,i.kt)("p",null,"As in CONSUME the index in the method name indicates the occurrence\nof the optional production in it's top rule."),(0,i.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OUT"))))),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"actionORMethodDef")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GrammarAction"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"OUT"),">"," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"DSLMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"OUT"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},'The grammar action to optionally invoke once                             or an "OPTIONS" object describing the grammar action and optional properties.')))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"OUT")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"GrammarAction")," return value (OUT) if the optional syntax is encountered\nor ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," if not."),(0,i.kt)("h4",{id:"inherited-from-11"},"Inherited from"),(0,i.kt)("p",null,"CstParser.OPTION"),(0,i.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:275"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"or"},"OR"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"OR"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"altsOrOpts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"T")),(0,i.kt)("p",null,"Parsing DSL method that indicates a choice between a set of alternatives must be made.\nThis is equivalent to an EBNF alternation (A | B | C | D ...), except\nthat the alternatives are ordered like in a PEG grammar.\nThis means that the ",(0,i.kt)("strong",{parentName:"p"},"first")," matching alternative is always chosen."),(0,i.kt)("p",null,"There are several forms for the inner alternatives array:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Passing alternatives array directly:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"  this.OR([\n    { ALT:() => { this.CONSUME(One) }},\n    { ALT:() => { this.CONSUME(Two) }},\n    { ALT:() => { this.CONSUME(Three) }}\n  ])\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Passing alternative array directly with predicates (GATE):"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"  this.OR([\n    { GATE: predicateFunc1, ALT:() => { this.CONSUME(One) }},\n    { GATE: predicateFuncX, ALT:() => { this.CONSUME(Two) }},\n    { GATE: predicateFuncX, ALT:() => { this.CONSUME(Three) }}\n  ])\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"These syntax forms can also be mixed:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"  this.OR([\n    {\n      GATE: predicateFunc1,\n      ALT:() => { this.CONSUME(One) }\n    },\n    { ALT:() => { this.CONSUME(Two) }},\n    { ALT:() => { this.CONSUME(Three) }}\n  ])\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Additionally an "options" object may be used:'),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'  this.OR({\n    DEF:[\n      { ALT:() => { this.CONSUME(One) }},\n      { ALT:() => { this.CONSUME(Two) }},\n      { ALT:() => { this.CONSUME(Three) }}\n    ],\n    // OPTIONAL property\n    ERR_MSG: "A Number"\n  })\n')))),(0,i.kt)("p",null,"The 'predicateFuncX' in the long form can be used to add constraints to choosing the alternative."),(0,i.kt)("p",null,"As in CONSUME the index in the method name indicates the occurrence\nof the alternation production in it's top rule."),(0,i.kt)("h4",{id:"type-parameters-3"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T"))))),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altsOrOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IOrAlt"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"T"),">","[] ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"OrMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"T"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},'A set of alternatives or an "OPTIONS" object describing the alternatives and optional properties.')))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"T")),(0,i.kt)("p",null,"The result of invoking the chosen alternative."),(0,i.kt)("h4",{id:"inherited-from-12"},"Inherited from"),(0,i.kt)("p",null,"CstParser.OR"),(0,i.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:411"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"OR"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"altsOrOpts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altsOrOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IOrAlt"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">","[] ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"OrMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"inherited-from-13"},"Inherited from"),(0,i.kt)("p",null,"CstParser.OR"),(0,i.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:412"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"or1"},"OR1"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"OR1"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"altsOrOpts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altsOrOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IOrAlt"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">","[] ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"OrMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"inherited-from-14"},"Inherited from"),(0,i.kt)("p",null,"CstParser.OR1"),(0,i.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,i.kt)("p",null,"docs/node_modules/@chevrotain/types/api.d.ts:419"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"or2"},"OR2"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"OR2"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"altsOrOpts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altsOrOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IOrAlt"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">","[] ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"OrMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"inherited-from-15"},"Inherited from"),(0,i.kt)("p",null,"CstParser.OR2"),(0,i.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,i.kt)("p",null,"docs/node_modules/@chevrotain/types/api.d.ts:426"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"or3"},"OR3"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"OR3"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"altsOrOpts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altsOrOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IOrAlt"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">","[] ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"OrMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"inherited-from-16"},"Inherited from"),(0,i.kt)("p",null,"CstParser.OR3"),(0,i.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,i.kt)("p",null,"docs/node_modules/@chevrotain/types/api.d.ts:433"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"or4"},"OR4"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"OR4"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"altsOrOpts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altsOrOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IOrAlt"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">","[] ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"OrMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"inherited-from-17"},"Inherited from"),(0,i.kt)("p",null,"CstParser.OR4"),(0,i.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,i.kt)("p",null,"docs/node_modules/@chevrotain/types/api.d.ts:440"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"or5"},"OR5"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"OR5"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"altsOrOpts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altsOrOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IOrAlt"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">","[] ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"OrMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"inherited-from-18"},"Inherited from"),(0,i.kt)("p",null,"CstParser.OR5"),(0,i.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,i.kt)("p",null,"docs/node_modules/@chevrotain/types/api.d.ts:447"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"or6"},"OR6"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"OR6"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"altsOrOpts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"parameters-17"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altsOrOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IOrAlt"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">","[] ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"OrMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"inherited-from-19"},"Inherited from"),(0,i.kt)("p",null,"CstParser.OR6"),(0,i.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,i.kt)("p",null,"docs/node_modules/@chevrotain/types/api.d.ts:454"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"or7"},"OR7"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"OR7"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"altsOrOpts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"parameters-18"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altsOrOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IOrAlt"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">","[] ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"OrMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"inherited-from-20"},"Inherited from"),(0,i.kt)("p",null,"CstParser.OR7"),(0,i.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,i.kt)("p",null,"docs/node_modules/@chevrotain/types/api.d.ts:461"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"or8"},"OR8"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"OR8"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"altsOrOpts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"parameters-19"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altsOrOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IOrAlt"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">","[] ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"OrMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"inherited-from-21"},"Inherited from"),(0,i.kt)("p",null,"CstParser.OR8"),(0,i.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,i.kt)("p",null,"docs/node_modules/@chevrotain/types/api.d.ts:468"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"or9"},"OR9"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"OR9"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"altsOrOpts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"parameters-20"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altsOrOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IOrAlt"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">","[] ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"OrMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-20"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"inherited-from-22"},"Inherited from"),(0,i.kt)("p",null,"CstParser.OR9"),(0,i.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,i.kt)("p",null,"docs/node_modules/@chevrotain/types/api.d.ts:475"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"override_rule"},"OVERRIDE","_","RULE"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"OVERRIDE_RULE"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"implementation"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"config?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"ParserMethod"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Parameters"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"F"),">",", ",(0,i.kt)("inlineCode",{parentName:"p"},"CstNode"),">"),(0,i.kt)("p",null,"Overrides a Grammar Rule\nSee usage example in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/chevrotain/chevrotain/blob/master/examples/parser/versioning/versioning.js"},"https://github.com/chevrotain/chevrotain/blob/master/examples/parser/versioning/versioning.js")),(0,i.kt)("h4",{id:"type-parameters-4"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"F")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends () => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"parameters-21"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"implementation")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"F"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IRuleConfig"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"CstNode"),">")))),(0,i.kt)("h4",{id:"returns-21"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ParserMethod"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Parameters"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"F"),">",", ",(0,i.kt)("inlineCode",{parentName:"p"},"CstNode"),">"),(0,i.kt)("h4",{id:"inherited-from-23"},"Inherited from"),(0,i.kt)("p",null,"CstParser.OVERRIDE","_","RULE"),(0,i.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:905"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rule"},"RULE"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"RULE"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"F"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"implementation"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"config?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"ParserMethod"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Parameters"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"F"),">",", ",(0,i.kt)("inlineCode",{parentName:"p"},"CstNode"),">"),(0,i.kt)("p",null,"Creates a Grammar Rule"),(0,i.kt)("p",null,"Note that any parameters of your implementation must be optional as it will\nbe called without parameters during the grammar recording phase."),(0,i.kt)("h4",{id:"type-parameters-5"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"F")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends () => ",(0,i.kt)("inlineCode",{parentName:"td"},"void"))))),(0,i.kt)("h4",{id:"parameters-22"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"implementation")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"F"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IRuleConfig"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"CstNode"),">")))),(0,i.kt)("h4",{id:"returns-22"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ParserMethod"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Parameters"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"F"),">",", ",(0,i.kt)("inlineCode",{parentName:"p"},"CstNode"),">"),(0,i.kt)("h4",{id:"inherited-from-24"},"Inherited from"),(0,i.kt)("p",null,"CstParser.RULE"),(0,i.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:895"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"skip_token"},"SKIP","_","TOKEN"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"SKIP_TOKEN"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"IToken")),(0,i.kt)("p",null,"Will consume a single token and return the ",(0,i.kt)("strong",{parentName:"p"},"next")," token, meaning\nthe token ",(0,i.kt)("strong",{parentName:"p"},"after")," the skipped token."),(0,i.kt)("h4",{id:"returns-23"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"IToken")),(0,i.kt)("h4",{id:"inherited-from-25"},"Inherited from"),(0,i.kt)("p",null,"CstParser.SKIP","_","TOKEN"),(0,i.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:863"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"subrule"},"SUBRULE"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"SUBRULE"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"ARGS"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"ruleToCall"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"CstNode")),(0,i.kt)("p",null,"The Parsing DSL Method is used by one rule to call another.\nIt is equivalent to a non-Terminal in EBNF notation."),(0,i.kt)("p",null,"This may seem redundant as it does not actually do much.\nHowever using it is ",(0,i.kt)("strong",{parentName:"p"},"mandatory")," for all sub rule invocations."),(0,i.kt)("p",null,"Calling another rule without wrapping in SUBRULE(...)\nwill cause errors/mistakes in the Parser's self analysis phase,\nwhich will lead to errors in error recovery/automatic lookahead calculation\nand any other functionality relying on the Parser's self analysis\noutput."),(0,i.kt)("p",null,"As in CONSUME the index in the method name indicates the occurrence\nof the sub rule invocation in its rule."),(0,i.kt)("h4",{id:"type-parameters-6"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ARGS")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"unknown"),"[]")))),(0,i.kt)("h4",{id:"parameters-23"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ruleToCall")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ParserMethod"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"ARGS"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"CstNode"),">")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"SubruleMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"ARGS"),">")))),(0,i.kt)("h4",{id:"returns-24"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"CstNode")),(0,i.kt)("h4",{id:"inherited-from-26"},"Inherited from"),(0,i.kt)("p",null,"CstParser.SUBRULE"),(0,i.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:942"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"atleastone"},"atLeastOne"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"atLeastOne"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"idx"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"actionORMethodDef"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Like ",(0,i.kt)("inlineCode",{parentName:"p"},"AT_LEAST_ONE")," with the numerical suffix as a parameter, e.g:\natLeastOne(0, X) === AT_LEAST_ONE(X)\natLeastOne(1, X) === AT_LEAST_ONE1(X)\natLeastOne(2, X) === AT_LEAST_ONE2(X)\n..."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," AT_LEAST_ONE"),(0,i.kt)("h4",{id:"parameters-24"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"idx")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"actionORMethodDef")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GrammarAction"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">"," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"DSLMethodOptsWithErr"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-25"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"inherited-from-27"},"Inherited from"),(0,i.kt)("p",null,"CstParser.atLeastOne"),(0,i.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:150"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"cantokentypebedeletedinrecovery"},"canTokenTypeBeDeletedInRecovery"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"canTokenTypeBeDeletedInRecovery"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"tokType"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"By default, all token types may be deleted. This behavior may be overridden in inheriting parsers.\nThe method receives the expected token type. The token that would be deleted can be received with ",(0,i.kt)("a",{parentName:"p",href:"RootParser#la"},"LA"),"."),(0,i.kt)("h4",{id:"parameters-25"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TokenType"))))),(0,i.kt)("h4",{id:"returns-26"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"inherited-from-28"},"Inherited from"),(0,i.kt)("p",null,"CstParser.canTokenTypeBeDeletedInRecovery"),(0,i.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:848"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"cantokentypebeinsertedinrecovery"},"canTokenTypeBeInsertedInRecovery"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"canTokenTypeBeInsertedInRecovery"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"tokType"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,'By default, all tokens type may be inserted. This behavior may be overridden in inheriting Recognizers\nfor example: One may decide that only punctuation tokens may be inserted automatically as they have no additional\nsemantic value. (A mandatory semicolon has no additional semantic meaning, but an Integer may have additional meaning\ndepending on its int value and context (Inserting an integer 0 in cardinality: "',"[1..]",'" will cause semantic issues\nas the max of the cardinality will be greater than the min value (and this is a false error!).'),(0,i.kt)("h4",{id:"parameters-26"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TokenType"))))),(0,i.kt)("h4",{id:"returns-27"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"inherited-from-29"},"Inherited from"),(0,i.kt)("p",null,"CstParser.canTokenTypeBeInsertedInRecovery"),(0,i.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:842"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"computecontentassist"},"computeContentAssist"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"computeContentAssist"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"startRuleName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"precedingInput"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"ISyntacticContentAssistPath"),"[]"),(0,i.kt)("h4",{id:"parameters-27"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"startRuleName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"precedingInput")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IToken"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The token vector up to (not including) the content assist point")))),(0,i.kt)("h4",{id:"returns-28"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ISyntacticContentAssistPath"),"[]"),(0,i.kt)("h4",{id:"inherited-from-30"},"Inherited from"),(0,i.kt)("p",null,"CstParser.computeContentAssist"),(0,i.kt)("h4",{id:"defined-in-44"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:64"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"consume-1"},"consume"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"consume"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"idx"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tokType"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"IToken")),(0,i.kt)("p",null,"Like ",(0,i.kt)("inlineCode",{parentName:"p"},"CONSUME")," with the numerical suffix as a parameter, e.g:\nconsume(0, X) === CONSUME(X)\nconsume(1, X) === CONSUME1(X)\nconsume(2, X) === CONSUME2(X)\n..."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," CONSUME"),(0,i.kt)("h4",{id:"parameters-28"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"idx")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TokenType"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ConsumeMethodOpts"))))),(0,i.kt)("h4",{id:"returns-29"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"IToken")),(0,i.kt)("h4",{id:"inherited-from-31"},"Inherited from"),(0,i.kt)("p",null,"CstParser.consume"),(0,i.kt)("h4",{id:"defined-in-45"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:99"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getbasecstvisitorconstructor"},"getBaseCstVisitorConstructor"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getBaseCstVisitorConstructor"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"IN"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"OUT"),">","(): (...",(0,i.kt)("inlineCode",{parentName:"p"},"args"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"any"),"[]) => ",(0,i.kt)("inlineCode",{parentName:"p"},"ICstVisitor"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"IN"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"OUT"),">"),(0,i.kt)("h4",{id:"type-parameters-7"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IN")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OUT")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any"))))),(0,i.kt)("h4",{id:"returns-30"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new getBaseCstVisitorConstructor"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"args"),")"),(0,i.kt)("h5",{id:"parameters-29"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...args")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]")))),(0,i.kt)("h4",{id:"inherited-from-32"},"Inherited from"),(0,i.kt)("p",null,"CstParser.getBaseCstVisitorConstructor"),(0,i.kt)("h4",{id:"defined-in-46"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:48"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getbasecstvisitorconstructorwithdefaults"},"getBaseCstVisitorConstructorWithDefaults"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getBaseCstVisitorConstructorWithDefaults"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"IN"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"OUT"),">","(): (...",(0,i.kt)("inlineCode",{parentName:"p"},"args"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"any"),"[]) => ",(0,i.kt)("inlineCode",{parentName:"p"},"ICstVisitor"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"IN"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"OUT"),">"),(0,i.kt)("h4",{id:"type-parameters-8"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IN")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OUT")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any"))))),(0,i.kt)("h4",{id:"returns-31"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn")),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new getBaseCstVisitorConstructorWithDefaults"),"(...",(0,i.kt)("inlineCode",{parentName:"p"},"args"),")"),(0,i.kt)("h5",{id:"parameters-30"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...args")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]")))),(0,i.kt)("h4",{id:"inherited-from-33"},"Inherited from"),(0,i.kt)("p",null,"CstParser.getBaseCstVisitorConstructorWithDefaults"),(0,i.kt)("h4",{id:"defined-in-47"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:52"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getgastproductions"},"getGAstProductions"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getGAstProductions"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Rule"),">"),(0,i.kt)("h4",{id:"returns-32"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Rule"),">"),(0,i.kt)("h4",{id:"inherited-from-34"},"Inherited from"),(0,i.kt)("p",null,"CstParser.getGAstProductions"),(0,i.kt)("h4",{id:"defined-in-48"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:56"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getnextpossibletokentypes"},"getNextPossibleTokenTypes"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"getNextPossibleTokenTypes"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"grammarPath"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"TokenType"),"[]"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"deprecated"))," - will be removed in the future"),(0,i.kt)("h4",{id:"parameters-31"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"grammarPath")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ITokenGrammarPath"))))),(0,i.kt)("h4",{id:"returns-33"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"TokenType"),"[]"),(0,i.kt)("h4",{id:"inherited-from-35"},"Inherited from"),(0,i.kt)("p",null,"CstParser.getNextPossibleTokenTypes"),(0,i.kt)("h4",{id:"defined-in-49"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:853"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getserializedgastproductions"},"getSerializedGastProductions"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getSerializedGastProductions"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"ISerializedGast"),"[]"),(0,i.kt)("h4",{id:"returns-34"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ISerializedGast"),"[]"),(0,i.kt)("h4",{id:"inherited-from-36"},"Inherited from"),(0,i.kt)("p",null,"CstParser.getSerializedGastProductions"),(0,i.kt)("h4",{id:"defined-in-50"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:58"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"gettokentoinsert"},"getTokenToInsert"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"getTokenToInsert"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"tokType"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"IToken")),(0,i.kt)("p",null,"Returns an \"imaginary\" Token to insert when Single Token Insertion is done\nOverride this if you require special behavior in your grammar.\nFor example if an IntegerToken is required provide one with the image '0' so it would be valid syntactically."),(0,i.kt)("h4",{id:"parameters-32"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"TokenType"))))),(0,i.kt)("h4",{id:"returns-35"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"IToken")),(0,i.kt)("h4",{id:"inherited-from-37"},"Inherited from"),(0,i.kt)("p",null,"CstParser.getTokenToInsert"),(0,i.kt)("h4",{id:"defined-in-51"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:833"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"many-1"},"many"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"many"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"idx"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"actionORMethodDef"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Like ",(0,i.kt)("inlineCode",{parentName:"p"},"MANY")," with the numerical suffix as a parameter, e.g:\nmany(0, X) === MANY(X)\nmany(1, X) === MANY1(X)\nmany(2, X) === MANY2(X)\n..."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," MANY"),(0,i.kt)("h4",{id:"parameters-33"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"idx")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"actionORMethodDef")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GrammarAction"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">"," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"DSLMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-36"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"inherited-from-38"},"Inherited from"),(0,i.kt)("p",null,"CstParser.many"),(0,i.kt)("h4",{id:"defined-in-52"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:137"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"option-1"},"option"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"option"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"OUT"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"idx"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"actionORMethodDef"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"OUT")),(0,i.kt)("p",null,"Like ",(0,i.kt)("inlineCode",{parentName:"p"},"OPTION")," with the numerical suffix as a parameter, e.g:\noption(0, X) === OPTION(X)\noption(1, X) === OPTION1(X)\noption(2, X) === OPTION2(X)\n..."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," OPTION"),(0,i.kt)("h4",{id:"type-parameters-9"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"OUT"))))),(0,i.kt)("h4",{id:"parameters-34"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"idx")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"actionORMethodDef")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GrammarAction"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"OUT"),">"," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"DSLMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"OUT"),">")))),(0,i.kt)("h4",{id:"returns-37"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"OUT")),(0,i.kt)("h4",{id:"inherited-from-39"},"Inherited from"),(0,i.kt)("p",null,"CstParser.option"),(0,i.kt)("h4",{id:"defined-in-53"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:113"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"or-1"},"or"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"or"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"idx"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"altsOrOpts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("p",null,"Like ",(0,i.kt)("inlineCode",{parentName:"p"},"OR")," with the numerical suffix as a parameter, e.g:\nor(0, X) === OR(X)\nor(1, X) === OR1(X)\nor(2, X) === OR2(X)\n..."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," OR"),(0,i.kt)("h4",{id:"parameters-35"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"idx")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altsOrOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IOrAlt"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">","[] ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"OrMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-38"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"any")),(0,i.kt)("h4",{id:"inherited-from-40"},"Inherited from"),(0,i.kt)("p",null,"CstParser.or"),(0,i.kt)("h4",{id:"defined-in-54"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:126"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"or"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"idx"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"altsOrOpts"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"T")),(0,i.kt)("h4",{id:"type-parameters-10"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T"))))),(0,i.kt)("h4",{id:"parameters-36"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"idx")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"altsOrOpts")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IOrAlt"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"T"),">","[] ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"OrMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"T"),">")))),(0,i.kt)("h4",{id:"returns-39"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"T")),(0,i.kt)("h4",{id:"inherited-from-41"},"Inherited from"),(0,i.kt)("p",null,"CstParser.or"),(0,i.kt)("h4",{id:"defined-in-55"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:127"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"parse"},"parse"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"parse"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"text"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("h4",{id:"parameters-37"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"text")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-40"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"cst?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"CstNode"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"errors")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"BluehawkError"),"[]")))),(0,i.kt)("h4",{id:"defined-in-56"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mongodb-university/Bluehawk/blob/4a28cda/src/bluehawk/parser/RootParser.ts#L275"},"src/bluehawk/parser/RootParser.ts:275")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"performselfanalysis"},"performSelfAnalysis"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"performSelfAnalysis"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"This must be called at the end of a Parser constructor.\nSee: ",(0,i.kt)("a",{parentName:"p",href:"http://chevrotain.io/docs/tutorial/step2_parsing.html#under-the-hood"},"http://chevrotain.io/docs/tutorial/step2_parsing.html#under-the-hood")),(0,i.kt)("h4",{id:"returns-41"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"inherited-from-42"},"Inherited from"),(0,i.kt)("p",null,"CstParser.performSelfAnalysis"),(0,i.kt)("h4",{id:"defined-in-57"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:17"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"reset"},"reset"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"reset"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,'Resets the parser state, should be overridden for custom parsers which "carry" additional state.\nWhen overriding, remember to also invoke the super implementation!'),(0,i.kt)("h4",{id:"returns-42"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"inherited-from-43"},"Inherited from"),(0,i.kt)("p",null,"CstParser.reset"),(0,i.kt)("h4",{id:"defined-in-58"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:46"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"subrule-1"},"subrule"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"subrule"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"ARGS"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"idx"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ruleToCall"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"CstNode")),(0,i.kt)("p",null,"Like ",(0,i.kt)("inlineCode",{parentName:"p"},"SUBRULE")," with the numerical suffix as a parameter, e.g:\nsubrule(0, X) === SUBRULE(X)\nsubrule(1, X) === SUBRULE1(X)\nsubrule(2, X) === SUBRULE2(X)\n..."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," SUBRULE"),(0,i.kt)("h4",{id:"type-parameters-11"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ARGS")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"unknown"),"[]")))),(0,i.kt)("h4",{id:"parameters-38"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"idx")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ruleToCall")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ParserMethod"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"ARGS"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"CstNode"),">")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"SubruleMethodOpts"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"ARGS"),">")))),(0,i.kt)("h4",{id:"returns-43"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"CstNode")),(0,i.kt)("h4",{id:"inherited-from-44"},"Inherited from"),(0,i.kt)("p",null,"CstParser.subrule"),(0,i.kt)("h4",{id:"defined-in-59"},"Defined in"),(0,i.kt)("p",null,"node_modules/@chevrotain/types/api.d.ts:919"))}u.isMDXComponent=!0}}]);